/*Given two arrays a[] and b[] of size m and n respectively, the task is to determine whether b[] is a subset of a[]. Both arrays are not sorted, and elements are distinct.

Examples:

Input: a[] = [11, 7, 1, 13, 21, 3, 7, 3], b[] = [11, 3, 7, 1, 7]
Output: true
Explanation: b[] is a subset of a[]
Input: a[] = [1, 2, 3, 4, 4, 5, 6], b[] = [1, 2, 4]
Output: true
Explanation: b[] is a subset of a[]
Input: a[] = [10, 5, 2, 23, 19], b[] = [19, 5, 3]
Output: false
Explanation: b[] is not a subset of a[]
Constraints:
1 <= a.size(), b.size() <= 105
1 <= a[i], b[j] <= 106
*/
class Solution {
    public boolean isSubset(int a[], int b[]) {
      if(b.length>a.length)
      return false;
      HashSet<Integer> hs= new HashSet<>();
      for(int i:a)
      {
          hs.add(i);
      }
          for(int j:b)
          {
              if(!hs.contains(j))
                    return false;
          }
         
      
      return true;
    }
   
}
